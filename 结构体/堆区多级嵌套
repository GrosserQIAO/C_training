#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct
{
	char *name;
	char **students;
}Teacher;

void allocatespace(Teacher ***teacher)
{
	Teacher **parray = malloc(sizeof(Teacher*)*3);
	for(int i=0;i<3;i++)
	{
		parray[i]=malloc(sizeof(Teacher));

		parray[i]->name = malloc(sizeof(char)*64);
		sprintf(parray[i]->name,"teacher_%d",i);

		parray[i]->students = malloc(sizeof(char*)*4);
		for(int j=0;j<4;j++)
		{
			parray[i]->students[j]=malloc(sizeof(char)*64);
			sprintf(parray[i]->students[j],"students_%d%d",i,j);
		}

	}
	*teacher = parray;
}

void showarray(Teacher **parray,int len)
{
	for(int i=0;i<len;i++)
	{
		printf("%s:\n",parray[i]->name);
		for(int j=0;j<4;j++)
		{
			printf("--------%s\n",parray[i]->students[j]);
		}
	}
}
void freearray(Teacher **parray,int len)
{
	for(int i=0;i<len;i++)
	{
		if(parray[i]!=NULL)
		{
			if(parray[i]->name!=NULL)free(parray[i]->name);
			for(int j=0;j<4;j++)
			{
				if(parray[i]->students[j]!=NULL)free(parray[i]->students[j]);
			}
			free(parray[i]->students);
		}
		free(parray[i]);
	}
	free(parray);
	parray=NULL;
}

int main()
{
	Teacher  **parray = NULL;
	allocatespace(&parray);
	showarray(parray,3);
	freearray(parray,3);
	return 0;
}
